version: '3.4'
services:
  redis:
    image: 'redis:6.2'
    container_name: redis_container
    volumes:
      - 'redis_data:/data'
    networks:
      app_net:
        ipv4_address: 172.16.1.11
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 30
      
  postgres:
    container_name: postgres_container
    image: 'postgres:13.1'
    env_file:
      - ./config/pg/.env
    volumes:
       - ./volumes/pg/data:/data/postgres
       - ./config/pg/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      app_net:
        ipv4_address: 172.16.1.12
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  rabbitmq:
    image: 'rabbitmq:3.8'
    container_name: rabbit_container
    hostname: rabbitmq
    env_file:
      - config/rmq/.env.rmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      app_net:
        ipv4_address: 172.16.1.13
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 3
        
  block_sender:
    image: ${DOCKER_REGISTRY-}block_sender
    build:
      context: .
      dockerfile: ./Block.Sender/Dockerfile
    container_name: block_sender_container
    environment: 
      RMQ_CONNECTION: "amqp://admin:admin@172.16.1.13:5672"
      BLOCK_DELAY_IN_SECONDS: "10"
    depends_on:
      - rabbitmq
    networks:
      app_net:
        ipv4_address: 172.16.1.14
    restart: on-failure
    
  block_processing:
    image: ${DOCKER_REGISTRY-}block_processing
    build:
      context: .
      dockerfile: ./Block.Processing/Dockerfile
    container_name: block_processing_container
    environment: 
      DB_CONNECTION: "Server=172.16.1.12;Port=5432;UserName=postgres;Password=123123;Database=blockdb;Minimum pool size=50;"
      RMQ_CONNECTION: "amqp://admin:admin@172.16.1.13:5672"
      REDIS_CONNECTION: "172.16.1.11:6379,syncTimeout=5000"
    depends_on:
      - rabbitmq
      - redis
      - postgres
    networks:
      app_net:
        ipv4_address: 172.16.1.15
    restart: on-failure
    
networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "172.16.1.0/24"
    
volumes:
  redis_data:
    driver: local